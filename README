pdrace for docker

For information about each service check their individual readme. 

# About the images:

## Building it: 

If you are building this image from a mac "m*" processor you will need to include processor flag to make it compatible with a more linuxamd architecture

- Building image with processor flag
- https://docs.docker.com/build/building/multi-platform/#:~:text=When%20triggering%20a%20build%2C%20use,one%20platform%20at%20a%20time.

The following command will build the image:  

docker build --platform=linux/amd64 -t <hub-user>/<repo-name>:<image_tag> .

To explain this with a use case, find below the steps to build an image for the client service: 

1. The check list: 
- The main service directory contains a dockerfile (./client/dockerfile)
- Docker is up and running in your computer (if you are using docker-desktop be sure it's running)
- You are logged to your docker user as docker build use it to store the image in docker hub (optional)
 
2. Go the service main repo 
cd client 

3. The command below will use the dockerfile available in the directory to build the image. 

docker build --platform=linux/amd64 -t ccdaniele/pdrace-client:docker-v1-amd64.


Let's take a look at what is happening here: 

- docker build ask docker to build the image

- --platform=linux/amd64 set the image to be build for linuxamd architecture processors (most common)

- -t indicates that we are including a tag

- ccdaniele/ docker user how manage the image in docker hub. For example this user is my personal one: https://hub.docker.com/u/ccdaniele 

- pdrace-client set the repo using the application and service name

- docker-v1 tag indicates the image is build for docker containers and its version is v1 


When the image has being build sucessfully you will see in the output something similar to this: 

 => [5/5]COPY . .                                                                                                                                                                     4.0s
 => exporting to image                                                                                                                                                                 4.4s
 => => exporting layers                                                                                                                                                                4.3s
 => => writing image sha256:9868cc7c7dfe24acee17625d6eefa19f79f43627f8465dc4e232d3b50780c4cc                                                                                           0.0s
 => => naming to docker.io/ccdaniele/pdrace-client:docker-v1 

 if it fails the errors will make reference to the line of the dockerfile that cannot be processed. 

Now your image is ready to be used locally, however if you want to use it outside of your local machine you will need to pushed to docker hub. 

4. To push the image to docker hub run the following command: 

docker push ccdaniele/pdrace-client:docker-v1

5. Since dockerhub save the images as private by default make sure you can set its configuration in the repository page so it can be free accessible. 
